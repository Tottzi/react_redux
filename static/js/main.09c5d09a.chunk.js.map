{"version":3,"sources":["logo.svg","state/action-creators/index.js","App.js","reportWebVitals.js","state/reducers/accountReducer.js","state/reducers/index.js","state/store.js","index.js"],"names":["depositMoney","amount","dispatch","type","payload","witdhrawMoney","App","account","useSelector","state","useDispatch","bindActionCreators","actionCreators","console","log","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","action","reducers","combineReducers","accountReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAAe,I,mBCAFA,EAAe,SAACC,GAC3B,OAAO,SAACC,GACNA,EAAS,CACPC,KAAM,UACNC,QAASH,MAKFI,EAAgB,SAACJ,GAC5B,OAAO,SAACC,GACNA,EAAS,CACPC,KAAM,WACNC,QAASH,M,OCUAK,MAjBf,WAEE,IAAMC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,WACrCL,EAAWQ,cAEjB,EAAuCC,YAAmBC,EAAgBV,GAAlEF,EAAR,EAAQA,aAAcK,EAAtB,EAAsBA,cAGtB,OADAQ,QAAQC,IAAI,MAEV,sBAAKC,UAAU,MAAf,UACE,6BAAKR,IACL,wBAAQS,QAAS,kBAAMhB,EAAa,MAApC,qBACA,wBAAQgB,QAAS,kBAAMX,EAAc,MAArC,0BCNSY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCICQ,EAXC,WAAwB,IAAvBjB,EAAsB,uDAAd,EAAGkB,EAAW,uCACrC,OAAQA,EAAOxB,MACb,IAAK,UACH,OAAOM,EAAQkB,EAAOvB,QACxB,IAAK,WACH,OAAOK,EAAQkB,EAAOvB,QACxB,QACE,OAAOK,ICAEmB,EAJEC,YAAgB,CAC/BtB,QAASuB,I,OCAEC,EAAQC,YACnBJ,EACA,GACAK,YAAgBC,MCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.09c5d09a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const depositMoney = (amount) => {\n  return (dispatch) => {\n    dispatch({\n      type: \"deposit\",\n      payload: amount\n    })\n  }\n}\n\nexport const witdhrawMoney = (amount) => {\n  return (dispatch) => {\n    dispatch({\n      type: \"withdraw\",\n      payload: amount\n    })\n  }\n}","import logo from './logo.svg';\nimport './App.css';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { actionCreators} from './state/index'\n\nfunction App() {\n\n  const account = useSelector(state => state.account)\n  const dispatch = useDispatch()\n\n  const { depositMoney, witdhrawMoney} = bindActionCreators(actionCreators, dispatch)\n\n  console.log('AC')\n  return (\n    <div className=\"App\">\n      <h1>{account}</h1>\n      <button onClick={() => depositMoney(1000)}>Deposit</button>\n      <button onClick={() => witdhrawMoney(1000)}>Withdraw</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const reducer = (state = 0, action) => {\n  switch (action.type) {\n    case 'deposit':\n      return state + action.payload;\n    case 'withdraw':\n      return state - action.payload\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","import { combineReducers } from \"redux\";\nimport accountReducer from './accountReducer';\n\nconst reducers = combineReducers({\n  account: accountReducer\n})\n\nexport default reducers;","import { createStore, applyMiddleware } from \"redux\";\nimport reducers from \"./reducers\";\nimport thunk from 'redux-thunk'\n\nexport const store = createStore(\n  reducers,\n  {},\n  applyMiddleware(thunk)\n)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport { store } from './state/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}